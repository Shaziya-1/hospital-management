"""
Django settings for hospitalmanagement project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url  # for Railway database support

# ---------------------------
# BASE DIRECTORIES
# ---------------------------

BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')

# ---------------------------
# SECURITY SETTINGS
# ---------------------------

SECRET_KEY = os.environ.get(
    'SECRET_KEY',
    'hpbv()ep00boce&o0w7z1h)st148(*m@6@-rk$nn)(n9ojj4c0'
)

DEBUG = os.environ.get('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = ['*']  # Change to your domain in production

# ---------------------------
# APPLICATION DEFINITION
# ---------------------------

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hospital',       # Your custom app
    'widget_tweaks',  # For template form rendering
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Serve static files efficiently
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hospitalmanagement.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hospitalmanagement.wsgi.application'

# ---------------------------
# DATABASE
# ---------------------------

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# If you are using Railway Postgres, you can override with:
# db_from_env = dj_database_url.config(conn_max_age=600)
# DATABASES['default'].update(db_from_env)

# ---------------------------
# PASSWORD VALIDATION
# ---------------------------

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# ---------------------------
# INTERNATIONALIZATION
# ---------------------------

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# ---------------------------
# STATIC FILES
# ---------------------------

STATIC_URL = '/static/'                               # URL prefix for static files
STATICFILES_DIRS = [STATIC_DIR]                       # Development folder
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')   # Collected files for production
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# ---------------------------
# MEDIA FILES
# ---------------------------

MEDIA_URL = '/media/'                                
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')        

# ---------------------------
# LOGIN REDIRECT
# ---------------------------

LOGIN_REDIRECT_URL = '/afterlogin'

# ---------------------------
# EMAIL CONFIGURATION
# ---------------------------

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'from@gmail.com'       # Replace with your sending email
EMAIL_HOST_PASSWORD = 'xyz'              # Replace with your email password
EMAIL_RECEIVING_USER = ['to@gmail.com']  # Receiving email list

# ---------------------------
# DEFAULT PRIMARY KEY FIELD
# ---------------------------

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
